import streamlit as st
import pandas as pd

st.set_page_config(page_title="Arbre de d√©cision RACI", layout="centered")
st.title("üå≥ Arbre de d√©cision RACI")

# ----------------------------
# √âtape 1 ‚Äì Type de projet
# ----------------------------
st.header("√âtape 1 ‚Äì Type de projet")
type_projet = None

if st.radio("Est-ce un projet Lab (investiguer un concept en setup de labo) ?", ["Oui", "Non"]) == "Oui":
    type_projet = "Lab"
    tech_lead = "Quantum"
elif st.radio("Est-ce un projet POC (d√©velopper une nouvelle fonctionnalit√© test√©e sur QPU R&D) ?", ["Oui", "Non"]) == "Oui":
    type_projet = "POC"
    tech_lead = "Performance"
elif st.radio("Est-ce un projet PROTO (fonctionnalit√© impl√©ment√©e sur un produit) ?", ["Oui", "Non"]) == "Oui":
    type_projet = "PROTO"
    tech_lead = "Int√©gration"
else:
    st.warning("‚ö†Ô∏è Clarification n√©cessaire avec le chef de projet.")

# Stockage des assignations RACI
assignations = []

if type_projet:
    st.success(f"Projet identifi√© : **{type_projet}** | Tech Lead = {tech_lead}")

    # ----------------------------
    # √âtape 2 ‚Äì Nature de la t√¢che
    # ----------------------------
    st.header("√âtape 2 ‚Äì Nature de la t√¢che")

    # Bloc A ‚Äì D√©finition amont
    st.subheader("Bloc A ‚Äì D√©finition amont")
    if st.checkbox("La t√¢che consiste-t-elle √† participer √† la d√©finition des besoins amonts ?"):
        assignations.append((tech_lead, "A"))
        assignations.append(("Chef de projet", "A"))
        assignations.append(("M√©tiers", "C"))

    if st.checkbox("La t√¢che implique-t-elle de prendre en compte les contraintes d‚Äôint√©gration ?"):
        if type_projet == "PROTO":
            assignations.append(("Int√©gration", "R"))
        elif type_projet == "POC":
            assignations.append(("Performance", "A"))
        elif type_projet == "Lab":
            assignations.append(("Quantum", "A"))

    if st.checkbox("La t√¢che consiste-t-elle en la d√©finition du syst√®me ou la synth√®se de l‚ÄôICD ?"):
        assignations.append((tech_lead, "R/A"))

    # Bloc B ‚Äì Design et strat√©gie de test
    st.subheader("Bloc B ‚Äì Design et strat√©gie de test")
    if st.checkbox("La t√¢che consiste-t-elle √† d√©finir ou valider les √©l√©ments de design n√©cessaires √† l‚Äôint√©gration ?"):
        assignations.append((tech_lead, "R"))
        assignations.append(("M√©tiers", "C"))

    if st.checkbox("La t√¢che consiste-t-elle √† d√©finir la strat√©gie de test ?"):
        assignations.append((tech_lead, "A"))
        assignations.append(("M√©tiers", "R"))
        assignations.append(("Autres √©quipes", "C"))

    # Bloc C ‚Äì Int√©gration et validation
    st.subheader("Bloc C ‚Äì Int√©gration et validation")
    if st.checkbox("La t√¢che consiste-t-elle √† int√©grer le QPU (HW ou SW) ?"):
        if type_projet == "PROTO":
            assignations.append(("Int√©gration", "R"))
        elif type_projet == "POC":
            assignations.append(("Performance", "A"))
        elif type_projet == "Lab":
            assignations.append(("Quantum", "A"))

    if st.checkbox("La t√¢che consiste-t-elle √† appliquer les tests d‚Äôint√©gration et v√©rifier leur couverture ?"):
        assignations.append((tech_lead, "R"))
        assignations.append(("Autres √©quipes", "C"))

    # Bloc D ‚Äì Optimisation et passation
    st.subheader("Bloc D ‚Äì Optimisation et passation")
    if st.checkbox("Apr√®s les tests syst√®mes, la t√¢che concerne-t-elle l‚Äôoptimisation du syst√®me ?"):
        assignations.append(("Performance", "A"))

    if st.checkbox("La t√¢che consiste-t-elle √† assurer la passation vers M√©thodes/Production ?"):
        if type_projet == "PROTO":
            assignations.append(("Int√©gration", "R"))
        elif type_projet == "POC":
            assignations.append(("Performance", "C"))
        elif type_projet == "Lab":
            assignations.append(("Quantum", "C"))

    # ----------------------------
    # R√©sultat : Matrice RACI
    # ----------------------------
    if assignations:
        st.header("üìä Matrice RACI g√©n√©r√©e
        ‚Ä¢ R ‚Äì Responsible (Responsable)
La personne ou l‚Äô√©quipe qui r√©alise r√©ellement la t√¢che. Elle ex√©cute le travail et s‚Äôassure que la t√¢che est faite correctement.
Exemple : pour c√¢bler un syst√®me, l‚Äôing√©nieur √©lec est R.
‚Ä¢ A ‚Äì Accountable (Autorit√© / Responsable ultime)
La personne qui a la responsabilit√© finale que la t√¢che soit termin√©e et correcte. C‚Äôest celle qui prend les d√©cisions finales et peut √™tre tenue responsable en cas de probl√®me.
Il y a toujours une seule personne A par t√¢che.
Exemple : le chef de projet qui valide le plan de c√¢blage.
‚Ä¢ C ‚Äì Consulted (Consult√©)
Les personnes ou √©quipes qui donnent des avis, expertises ou informations avant ou pendant la r√©alisation. Elles ne font pas le travail mais leur opinion est importante.
Exemple : l‚Äôarchitecte ou l‚Äôint√©gration syst√®me peut √™tre C pour un chemin de c√¢blage.
‚Ä¢ I ‚Äì Informed (Inform√©)
Ceux qui doivent √™tre tenus au courant de l‚Äôavancement ou du r√©sultat, mais qui ne participent pas directement ni ne prennent de d√©cisions.
Exemple : certaines √©quipes impact√©es par le c√¢blage mais qui ne participent pas √† sa d√©finition.")
        df = pd.DataFrame(assignations, columns=["R√¥le", "Action"])
        df = df.groupby("R√¥le")["Action"].apply(lambda x: "/".join(sorted(set(x)))).reset_index()
        st.dataframe(df)
    else:
        st.info("üëâ S√©lectionne des r√©ponses pour g√©n√©rer la matrice RACI.")
